name: Get Batch Data

on:
  workflow_dispatch:
    inputs:

      batch_type:
        description: 'Batch type'
        required: true
        type: choice
        options:
            - batch_1
            - batch_2

      loguru_level:
        description: 'Loguru level'
        required: true
        type: choice
        options:
            - DEBUG
            - INFO
            - WARNING
            - ERROR
            - CRITICAL

      to:
        description: 'TO'
        required: false
        type: number
        default: 0.05

      sub_batch_type:
        description: 'ed'
        required: true
        default: ''

      batch_start:
        description: 'start'
        required: true
        default: ''

      batch_end:
        description: 'end'
        required: true
        default: ''

jobs:
  batch_job:
    runs-on: ubuntu-latest
    # get the paper name from secrets
    steps:

      - name: setup env
        run: |
            if [ "${{ github.event.inputs.batch_type }}" == "batch_1" ]; then
              echo "BATCH_NAME=${{ secrets.BATCH_1_NAME }}" >> $GITHUB_ENV
            elif [ "${{ github.event.inputs.batch_type }}" == "batch_2" ]; then
              echo "BATCH_NAME=${{ secrets.BATCH_2_NAME }}" >> $GITHUB_ENV
            else
              echo "Invalid paper name selected"
              exit 1
            fi

      - name: Pull Docker
        run: |
          echo "${{ secrets.JHUMRU_GHCR_TOKEN }}" | docker login ghcr.io -u jhumru --password-stdin
          docker pull ghcr.io/jhumru/samachaar:${{ vars.SAMACHAAR_DOCKER_TAG }}
          docker tag ghcr.io/jhumru/samachaar:${{ vars.SAMACHAAR_DOCKER_TAG }} samachaar:${{ vars.SAMACHAAR_DOCKER_TAG }}
        

      - name: Run batch
        run: |
          docker run -v ${{ github.workspace }}:/workspace -e RETRY_COUNT=${{ vars.RETRY_COUNT }} -e MAX_CONCURRENT_REQUESTS=${{ vars.MAX_CONCURRENT_REQUESTS }} -e ${{ secrets.ENV_TO }}=${{ github.event.inputs.to }} -e LOGURU_LEVEL=${{ github.event.inputs.loguru_level }} -e LOG_FILE=${{ secrets.LOG_FILE }} -e DB_PATH=${{ secrets.DB_PATH }} samachaar:${{ vars.SAMACHAAR_DOCKER_TAG }} ${{ env.BATCH_NAME }} ${{ secrets.MANY_DAYS }} ${{secrets.BATCH_START_SIGN }} ${{ github.event.inputs.batch_start }} ${{secrets.BATCH_END_SIGN }} ${{ github.event.inputs.batch_end }} --data-dir /workspace/${{ secrets.DEFAULT_FOLDER_NAME }} ${{secrets.SUB_BATCH_SIGN }} ${{ github.event.inputs.sub_batch_type }}

      - name: Get batch size
        run: du -sh ${{ github.workspace }}/${{ secrets.DEFAULT_FOLDER_NAME }}
        
      - name: save batch
        run: |
          zip -rq ${{ secrets.DEFAULT_FOLDER_NAME }}.zip ${{ secrets.DEFAULT_FOLDER_NAME }}
          curl https://rclone.org/install.sh | sudo bash
          mkdir -p ~/.config/rclone
          echo "[s3]
          type = s3
          provider = Other
          env_auth = false
          access_key_id = ${{ secrets.R2_ACCESS_KEY_ID }}
          secret_access_key = ${{ secrets.R2_SECRET_ACCESS_KEY }}
          endpoint = ${{ secrets.R2_ENDPOINT }}
          region = auto" > ~/.config/rclone/rclone.conf
          rclone copyto ${{ secrets.DEFAULT_FOLDER_NAME }}.zip s3:${{ secrets.r2_bucket_name }}/${{ github.event.inputs.batch_start }}/${{ github.event.inputs.sub_batch_type }}/${{ secrets.DEFAULT_FOLDER_NAME }}.zip --retries 5 --low-level-retries 10 --retry-delay 2s
